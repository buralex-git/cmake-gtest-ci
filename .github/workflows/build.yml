name: "Build"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: "${{ matrix.os_label }}, ${{ matrix.cc }}, ${{ matrix.build_type }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-clang, ubuntu-gcc, macos-clang, macos-gcc, windows-msvc]
        include:
          - name: ubuntu-clang
            os: ubuntu-latest
            os_label: Ubuntu
            cxx: clang++
            cc: clang

          - name: ubuntu-gcc
            os: ubuntu-latest
            os_label: Ubuntu
            cxx: g++
            cc: gcc

          - name: macos-clang
            os: macos-latest
            os_label: MacOS
            cxx: clang++
            cc: clang

          - name: macos-gcc
            os: macos-latest
            os_label: MacOS
            cxx: g++
            cc: gcc

          - name: windows-msvc
            os: windows-latest
            os_label: Windows
            cxx: cl.exe
            cc: cl.exe

        build_type: [Release, Debug]

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v2

    - name: "Install cmake"
      uses: lukka/get-cmake@latest

    ##### Maybe not needed?
    - name: "Setup cmd tools for compilation (Windows only)"
      uses: ilammy/msvc-dev-cmd@v1

    - name: "Configure"
      env:
        CXX: ${{ matrix.cxx }}
        CC: ${{ matrix.cc }}
      run: cmake -B build -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}"

    - name: "Build code"
      run: cmake --build build --config "${{ matrix.build_type }}"

    - name: "Run unit tests"
      run: |
        cd build
        set CTEST_OUTPUT_ON_FAILURE=1
        ctest -C Debug -VV
