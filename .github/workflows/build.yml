name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os_label }}, ${{ matrix.cc }}, ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #name: [ubuntu-gcc, ubuntu-clang, macos-gcc, macos-clang, windows-msvc]
        name: [ubuntu-gcc]
        include:
          - name: ubuntu-clang
            os: ubuntu-latest
            os_label: Ubuntu
            cxx: clang++
            cc: clang
            generator: "Unix Makefiles"

#          - name: ubuntu-gcc
#            os: ubuntu-latest
#            os_label: Ubuntu
#            cxx: g++
#            cc: gcc
#            generator: "Unix Makefiles"

#          - name: macos-clang
#            os: macos-latest
#            os_label: MacOS
#            cxx: clang++
#            cc: clang
#            generator: "Unix Makefiles"

#          - name: macos-gcc
#            os: macos-latest
#            os_label: MacOS
#            cxx: g++
#            cc: gcc
#            generator: "Unix Makefiles"

#          - name: macos-clang
#            os: macos-latest
#            os_label: MacOS
#            cxx: clang++
#            cc: clang
#            generator: "Unix Makefiles"

#          - name: windows-msvc
#            os: windows-latest
#            os_label: Windows
#            cxx: cl.exe
#            cc: cl.exe
#            generator: "NMake Makefiles"

        build_type: [Release, Debug]

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v2

    - name: "Install cmake"
      uses: lukka/get-cmake@latest

    - name: "Setup cmd tools for compilation (Windows only)"
      uses: ilammy/msvc-dev-cmd@v1

    - name: "Configure"
      env:
        CXX: ${{ matrix.cxx }}
        CC: ${{ matrix.cc }}
      run: |
        mkdir build
        cd build
        cmake -G"${{ matrix.generator }}" -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}" ..

    - name: "Build code"  # Linux, Macos
      run: |
        cd build
        cmake --build . --target all
      if: "!contains( matrix.os, 'windows')"
    - name: "Build code"  # Windows
      run: |
        cd build
        nmake
      if: "contains( matrix.os, 'windows')"

    - name: "Run unit tests"
      run: |
        cd build
        ctest -VV

